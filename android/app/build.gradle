apply plugin: "com.android.application"
apply plugin: "com.facebook.react"

/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    /* Folders */
    //   The root of your project, i.e. where "package.json" lives. Default is `..`.
    //   rootDir = file("../")
    //   The folder where the react-native package is searched. Default is `../node_modules/react-native`.
    //   reactNativeDir = file("../node_modules/react-native")
    //   The folder where the react-native codegen package is searched. Default is `../node_modules/react-native-codegen`.
    //   codegenDir = file("../node_modules/react-native-codegen")
    //   The root of your Android project, i.e. where "build.gradle" lives. Default is `.`
    //   androidProjectDir = file(".")

    /* Variants */
    //   By default, progen builds a debuggable APK for each active variant. You can change this behavior
    //   by adding react.activeVariants to your build.gradle:
    //      activeVariants = ["a", "b"]
    //   This will cause progen to only build APKs for "a" and "b" variants.
    //      activeVariants = []
    //   This will cause progen to not build any APKs for any variant.

    /* Advanced configuration */
    //   By default, the cli will run a codegen automatically for you. You can disable this behavior
    //   by adding the following to your build.gradle:
    //      codegenEnabled = false
}

def getExtOrDefault(name) {
    return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["ReactNative" + name]
}

android {
    ndkVersion rootProject.ext.ndkVersion

    compileSdkVersion rootProject.ext.compileSdkVersion

    namespace "com.astramaannative"
    defaultConfig {
        applicationId "com.astramaannative"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            if (project.hasProperty('MYAPP_RELEASE_STORE_FILE')) {
                storeFile file(MYAPP_RELEASE_STORE_FILE)
                storePassword MYAPP_RELEASE_STORE_PASSWORD
                keyAlias MYAPP_RELEASE_KEY_ALIAS
                keyPassword MYAPP_RELEASE_KEY_PASSWORD
            }
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // Caution! In production, you need to generate your own keystore file.
            // see https://reactnative.dev/docs/signed-apk-android.
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android")

    implementation("androidx.swiperefreshlayout:swiperefreshlayout:1.1.0")

    debugImplementation("com.facebook.flipper:flipper:0.212.1")
    debugImplementation("com.facebook.flipper:flipper-network-plugin:0.212.1") {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }

    debugImplementation("com.facebook.flipper:flipper-fresco-driver:0.212.1")
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
